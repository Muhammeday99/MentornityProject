[{"/mnt/d/React_Projects/mentornity/project/src/index.js":"1","/mnt/d/React_Projects/mentornity/project/src/App.js":"2","/mnt/d/React_Projects/mentornity/project/src/components/main.js":"3","/mnt/d/React_Projects/mentornity/project/src/components/repos.js":"4","/mnt/d/React_Projects/mentornity/project/src/components/repoCard.js":"5"},{"size":168,"mtime":1611950585061,"results":"6","hashOfConfig":"7"},{"size":144,"mtime":1611953692693,"results":"8","hashOfConfig":"7"},{"size":1692,"mtime":1611964282460,"results":"9","hashOfConfig":"7"},{"size":1077,"mtime":1611964747878,"results":"10","hashOfConfig":"7"},{"size":575,"mtime":1611966083799,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1o8r7jp",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/React_Projects/mentornity/project/src/index.js",[],["25","26"],"/mnt/d/React_Projects/mentornity/project/src/App.js",[],"/mnt/d/React_Projects/mentornity/project/src/components/main.js",["27","28"],"import React, { useState } from \"react\";\r\nimport Repos from \"./repos\";\r\nimport { Card, Button, Image } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Assets/main.css\";\r\n\r\nconst MainPage = (props) => {\r\n    const name = props.name;\r\n    const [data, setData] = useState();\r\n    const [avatar, setAvatar] = useState();\r\n    const [isClicked, setIsClicked] = useState(false);\r\n\r\n    const getData = async () => {\r\n        const user = await fetch(\"https://api.github.com/users/\" + name, {\r\n            method: \"GET\",\r\n        });\r\n        const repos_url = await fetch(\r\n            \"https://api.github.com/users/\" + name + \"/repos\",\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        );\r\n        const repos = await repos_url.json();\r\n        const _data = await user.json();\r\n        setData(repos);\r\n        setAvatar(_data.avatar_url);\r\n    };\r\n\r\n    const handleBtnClick = () => {\r\n        setIsClicked(true);\r\n    };\r\n\r\n    if (data == undefined) getData();\r\n    if (!isClicked) {\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"ImgDiv\">\r\n                    <Image className=\"mainIMG\" src={avatar} />\r\n                </div>\r\n                <div className=\"BtnDiv\">\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        className=\"btn\"\r\n                        onClick={handleBtnClick}\r\n                    >\r\n                        Click To View The Repos of {name}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <Repos list={data} />;\r\n    }\r\n};\r\n\r\nexport default MainPage;\r\n","/mnt/d/React_Projects/mentornity/project/src/components/repos.js",["29","30"],"import React from \"react\";\r\nimport RepoCard from \"./repoCard\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Repos = (props) => {\r\n    const data = props.list;\r\n    let r = [];\r\n    for (let i = 0; i < data.length / 5; i++) {\r\n        r.push(data.slice(i * 5, (i + 1) * 5));\r\n    }\r\n    return (\r\n        <div style={{}}>\r\n            {r.map((d) => {\r\n                return (\r\n                    <div style={{ display: \"flex\" }}>\r\n                        {d.map((elmnt, index) => {\r\n                            return (\r\n                                <RepoCard\r\n                                    key={index}\r\n                                    name={elmnt.name}\r\n                                    description={elmnt.description}\r\n                                    repo_url={elmnt.html_url}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Repos;\r\n","/mnt/d/React_Projects/mentornity/project/src/components/repoCard.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":10,"nodeType":"37","messageId":"38","endLine":3,"endColumn":14},{"ruleId":"39","severity":1,"message":"40","line":33,"column":14,"nodeType":"41","messageId":"42","endLine":33,"endColumn":16},{"ruleId":"35","severity":1,"message":"43","line":3,"column":10,"nodeType":"37","messageId":"38","endLine":3,"endColumn":16},{"ruleId":"35","severity":1,"message":"36","line":3,"column":18,"nodeType":"37","messageId":"38","endLine":3,"endColumn":22},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]